Notation function: f: A -> B.

Definition function: for all f. for all A. for all B. 
    f: A -> B iff for all x. in(x,A) implies exists y. in(y,B) and 
        relapp(f,x,y) and 
        (for all y2. in(y2,B) implies (equal(y,y2) or not relapp(f,x,y2))).

Definition composition: for all f. for all g. for all A. for all B. for all C. f: A -> B and g: B -> C implies 
    for all x. for all y. for all z. in(x,A) and in(y,B) and in(z,C) implies
        (sfunction(composition(f,g),A,C)) and
        (relapp(composition(f,g),x,z) iff relapp(f,x,y) and relapp(g,y,z)).

Let f: A -> B.

Definition functionClosure:
    (for all x. for all y. equal(x,y) implies exists z. relapp(f,x,z) and relapp(f,y,z)) and 
    (for all g. for all C. for all D. g: C -> D implies
        for all c. for all d. for all e. relapp(g,c,e) and relapp(g,d,e) implies 
            exists m. relapp(composition(g,f),c,m) and relapp(composition(g,f),d,m)
    ).

Definition injective: injective(f) iff
    for all x1. for all x2. for all y. relapp(f,x1,y) and relapp(f,x2,y) implies equal(x1,x2).

Definition surjective: surjective(f) iff
    for all y. in(y,B) implies exists x. in(x,A) and relapp(f,x,y).




# Todo: Define f â—‹ g as sugar for composition(f,g)