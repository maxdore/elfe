Include sets.
Include relations.










Let A,B,C be set.

Notation function: f: A -> B.

Definition function: for all f.
    f: A -> B iff for all x ∈ A. exists y ∈ B. 
        relapp(f,x,y) and 
        (for all y2 ∈ B. y = y2 or not relapp(f,x,y2)).

Let f: A -> B.

Proposition functionClosure:
   for all x1 ∈ A. for all x2 ∈ A. x1 = x2 implies exists y ∈ B. f[x1,y] and f[x2,y].

Definition injective: f is injective iff
    for all x1 ∈ A. for all x2 ∈ A. for all y ∈ B. f[x1,y] and f[x2,y] implies x1 = x2.

Definition surjective: f is surjective iff
    for all y ∈ B. exists x ∈ A. f[x,y].

Lemma: contradiction. Proof: qed.
Definition bijective: f is bijective iff f is injective and f is surjective.



Notation inverse: f⁻¹.
Definition inverse: (f⁻¹): B -> A and (for all x ∈ A. for all y ∈ B. f[x,y] implies (f⁻¹)[y,x]).

Let I be set.
Let i: I -> I.

Definition identity: i is identity iff for all x ∈ I. i[x,x].

Notation funApp: f{x}.
Proposition funEquality: for all x1 ∈ A. for all x2 ∈ A. (f{x1}) = (f{x2}) iff exists y ∈ B. (f[x1,y] and f[x2,y]).


Let g: B -> C.

Notation composition: g∘f.
Definition composition: (g∘f): A -> C and
    (for all x ∈ A. for all y ∈ B. for all z ∈ C.
            ((f[x,y] and g[y,z]) implies (g∘f)[x,z])).

Proposition compositionClosure: for all c ∈ A. for all d ∈ A. for all e ∈ B. f[c,e] and f[d,e] implies 
            exists m ∈ C. (g∘f)[c,m] and (g∘f)[d,m].

