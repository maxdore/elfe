fof(s5, axiom, (! [VA] : ((set(VA)) => (! [Vf] : ((function(Vf,VA,powerset(VA))) => (? [VM] : (((set(VM)) & (subset(VM,VA))) & (! [Vx] : ((in(Vx,VA)) => ((in(Vx,VM)) <=> (! [Vy] : ((in(Vy,powerset(VA))) => ((relapp(Vf,Vx,Vy)) => (~(in(Vx,Vy)))))))))))))))).
fof(sfunEquality, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) => (! [Vg] : (! [VC] : ((function(Vg,VB,VC)) => (! [Vx1] : ((in(Vx1,VA)) => (! [Vx2] : ((in(Vx2,VA)) => ((funApp(Vf,Vx1)=funApp(Vf,Vx2)) <=> (? [Vy] : (? [VB] : ((in(Vy,VB)) & ((relapp(Vf,Vx1,Vy)) & (relapp(Vf,Vx2,Vy))))))))))))))))))).
fof(scompositionClosure, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) => (! [Vg] : (! [VC] : ((function(Vg,VB,VC)) => (! [Vc] : ((in(Vc,VA)) => (! [Vd] : ((in(Vd,VA)) => (! [Ve] : ((in(Ve,VB)) => (((relapp(Vf,Vc,Ve)) & (relapp(Vf,Vd,Ve))) => (? [Vm] : (? [VC] : ((in(Vm,VC)) & ((relapp(composition(Vg,Vf),Vc,Vm)) & (relapp(composition(Vg,Vf),Vd,Vm))))))))))))))))))))).
fof(sfunctionClosure, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) => (! [Vg] : (! [VC] : ((function(Vg,VB,VC)) => (! [Vx] : ((in(Vx,VA)) => (! [Vy] : ((in(Vy,VA)) => ((Vx=Vy) => (? [Vz] : (? [VB] : ((in(Vz,VB)) & ((relapp(Vf,Vx,Vz)) & (relapp(Vf,Vy,Vz))))))))))))))))))).
fof(scomposition, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) => (! [Vg] : (! [VC] : ((function(Vg,VB,VC)) => (! [Vx] : (! [Vy] : (! [Vz] : ((((in(Vx,VA)) & (in(Vy,VB))) & (in(Vz,VC))) => ((function(composition(Vg,Vf),VA,VC)) & (((relapp(Vf,Vx,Vy)) & (relapp(Vg,Vy,Vz))) => (relapp(composition(Vg,Vf),Vx,Vz)))))))))))))))).
fof(sbijective, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) => ((bijective(Vf)) <=> ((injective(Vf)) & (surjective(Vf))))))))).
fof(ssurjective, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) => ((surjective(Vf)) <=> (! [Vy] : ((in(Vy,VB)) => (? [Vx] : (? [VA] : ((in(Vx,VA)) & (relapp(Vf,Vx,Vy))))))))))))).
fof(sinjective, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) => ((injective(Vf)) <=> (! [Vx1] : ((in(Vx1,VA)) => (! [Vx2] : ((in(Vx2,VA)) => (! [Vy] : ((in(Vy,VB)) => (((relapp(Vf,Vx1,Vy)) & (relapp(Vf,Vx2,Vy))) => (Vx1=Vx2)))))))))))))).
fof(sfunction, axiom, (! [Vf] : (! [VA] : (! [VB] : ((function(Vf,VA,VB)) <=> (! [Vx] : ((in(Vx,VA)) => (? [Vy] : (? [VB] : ((in(Vy,VB)) & ((relapp(Vf,Vx,Vy)) & (! [Vy2] : ((in(Vy2,VB)) => ((Vy=Vy2) | (~(relapp(Vf,Vx,Vy2))))))))))))))))).
fof(s4, axiom, (! [VR] : ((relation(VR)) => (! [VS] : ((relation(VS)) => (relation(intersection(VR,VS)))))))).
fof(srelationIntersection, axiom, (! [VR] : ((relation(VR)) => (! [VS] : ((relation(VS)) => (! [Vx] : ((element(Vx)) => (! [Vy] : ((element(Vy)) => ((relapp(intersection(VR,VS),Vx,Vy)) <=> ((relapp(VR,Vx,Vy)) & (relapp(VS,Vx,Vy))))))))))))).
fof(s3, axiom, (! [VR] : ((relation(VR)) => (! [VS] : ((relation(VS)) => (relation(union(VR,VS)))))))).
fof(srelationUnion, axiom, (! [VR] : ((relation(VR)) => (! [VS] : ((relation(VS)) => (! [Vx] : ((element(Vx)) => (! [Vy] : ((element(Vy)) => ((relapp(union(VR,VS),Vx,Vy)) <=> ((relapp(VR,Vx,Vy)) | (relapp(VS,Vx,Vy))))))))))))).
fof(s2, axiom, (! [VR] : ((relation(VR)) => (relation(comp(VR)))))).
fof(srelationComplement, axiom, (! [VR] : ((relation(VR)) => (! [Vx] : ((element(Vx)) => (! [Vy] : ((element(Vy)) => ((relapp(comp(VR),Vx,Vy)) <=> (~(relapp(VR,Vx,Vy))))))))))).
fof(s1, axiom, (! [VR] : ((relation(VR)) => (relation(inverse(VR)))))).
fof(srelationInverse, axiom, (! [VR] : ((relation(VR)) => (! [Vx] : ((element(Vx)) => (! [Vy] : ((element(Vy)) => ((relapp(inverse(VR),Vy,Vx)) <=> (relapp(VR,Vx,Vy)))))))))).
fof(srelationSub, axiom, (! [VR] : ((relation(VR)) => (! [VS] : ((relation(VS)) => (! [Vx] : ((element(Vx)) => (! [Vy] : ((element(Vy)) => ((subset(VR,VS)) <=> ((relapp(VR,Vx,Vy)) => (relapp(VS,Vx,Vy))))))))))))).
fof(sequality, axiom, (! [VR] : ((relation(VR)) => (! [VS] : ((relation(VS)) => (! [Vx] : ((element(Vx)) => (! [Vy] : ((element(Vy)) => ((VR=VS) <=> ((relapp(VR,Vx,Vy)) <=> (relapp(VS,Vx,Vy))))))))))))).
fof(sreflexivity, axiom, (! [VR] : ((relation(VR)) => ((reflexive(VR)) <=> (! [Vx] : ((element(Vx)) => (relapp(VR,Vx,Vx)))))))).
fof(stransitivity, axiom, (! [VR] : ((relation(VR)) => ((transitive(VR)) <=> (! [Vx] : (! [Vy] : (! [Vz] : ((((((element(Vx)) & (element(Vy))) & (element(Vz))) & (relapp(VR,Vx,Vy))) & (relapp(VR,Vy,Vz))) => (relapp(VR,Vx,Vz)))))))))).
fof(sboundness, axiom, (! [VR] : ((relation(VR)) => ((bound(VR)) <=> (! [Vx] : ((element(Vx)) => (? [Vy] : ((element(Vy)) & (relapp(VR,Vx,Vy)))))))))).
fof(ssymmetry, axiom, (! [VR] : ((relation(VR)) => ((symmetric(VR)) <=> (! [Vx] : (! [Vy] : ((((element(Vx)) & (element(Vy))) & (relapp(VR,Vx,Vy))) => (relapp(VR,Vy,Vx))))))))).
fof(sempty, axiom, (! [VR] : ((relation(VR)) => ((empty(VR)) <=> (~(nonempty(VR))))))).
fof(snonempty, axiom, (! [VR] : ((relation(VR)) => ((nonempty(VR)) <=> (? [Vx] : ((element(Vx)) & (? [Vy] : ((element(Vy)) & (relapp(VR,Vx,Vy)))))))))).
fof(spowersetSet, axiom, (! [VA] : ((set(VA)) => (set(powerset(VA)))))).
fof(spowerset, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => ((in(VB,powerset(VA))) <=> (subset(VB,VA)))))))).
fof(scompSet, axiom, (! [VA] : ((set(VA)) => (set(comp(VA)))))).
fof(scomp, axiom, (! [VA] : ((set(VA)) => (! [Vx] : ((element(Vx)) => ((in(Vx,comp(VA))) <=> (~(in(Vx,VA))))))))).
fof(sintersectionSet, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => (set(intersection(VA,VB)))))))).
fof(sintersection, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => (! [Vx] : ((element(Vx)) => ((in(Vx,intersection(VA,VB))) <=> ((in(Vx,VA)) & (in(Vx,VB))))))))))).
fof(sunionSet, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => (set(union(VA,VB)))))))).
fof(sunion, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => (! [Vx] : ((element(Vx)) => ((in(Vx,union(VA,VB))) <=> ((in(Vx,VA)) | (in(Vx,VB))))))))))).
fof(s0, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => ((VA=VB) <=> ((subset(VA,VB)) & (subset(VB,VA))))))))).
fof(ssubset, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => (! [Vx] : ((element(Vx)) => ((subset(VA,VB)) <=> ((in(Vx,VA)) => (in(Vx,VB))))))))))).
fof(sempty, axiom, (! [VA] : ((set(VA)) => ((empty(VA)) <=> (~(nonempty(VA))))))).
fof(snonempty, axiom, (! [VA] : ((set(VA)) => (! [Vx] : ((element(Vx)) => ((nonempty(VA)) <=> (? [Vx] : ((element(Vx)) & (in(Vx,VA)))))))))).
fof(sequality, axiom, (! [VA] : ((set(VA)) => (! [VB] : ((set(VB)) => (! [Vx] : ((element(Vx)) => ((VA=VB) <=> ((in(Vx,VA)) <=> (in(Vx,VB))))))))))).
fof(s7, axiom, (set(cA))).
fof(s8, axiom, (? [Vf] : ((function(cf,cA,powerset(cA))) & (surjective(cf))))).
fof(s44, axiom, (empty(cA))).
fof(s42, conjecture, ($false)).
